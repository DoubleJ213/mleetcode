package learn

import (
	"fmt"
	"testing"
)

func TestBoard(t *testing.T) {
	board := [][]byte{
		{'8', '3', '.', '.', '7', '.', '.', '.', '.'},
		{'6', '.', '.', '1', '9', '5', '.', '.', '.'},
		{'.', '9', '8', '.', '.', '.', '.', '6', '.'},
		{'.', '.', '.', '.', '6', '.', '.', '.', '3'},
		{'4', '.', '.', '8', '.', '3', '.', '.', '1'},
		{'7', '.', '.', '.', '2', '.', '.', '.', '6'},
		{'.', '6', '.', '.', '.', '.', '2', '8', '.'},
		{'.', '.', '.', '4', '1', '9', '.', '.', '5'},
		{'.', '.', '.', '.', '8', '.', '.', '7', '9'},
	}
	testBoard(board)
}

func testBoard(board [][]byte) {
	//	一次遍历， 判断横、纵、3*3小棋盘是否有重复的数
	for i := 0; i < len(board); i++ {
		for j := 0; j < len(board[i]); j++ {
			//fmt.Printf("%v  ", string(board[i][j])) //按照横坐标打印
			//fmt.Printf("%v  ", string(board[j][i])) //按照纵坐标打印
			fmt.Printf("%v  ", string(board[i/3*3+j/3][i%3*3+j%3])) //按照小棋盘打印,横着打印的
		}
		fmt.Println("")
	}
}
